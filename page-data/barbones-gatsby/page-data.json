{"componentChunkName":"component---src-templates-post-tsx","path":"/barbones-gatsby/","result":{"data":{"mdx":{"frontmatter":{"title":"Barebones Gatsby","date":"21 March, 2020"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Barebones Gatsby\",\n  \"date\": \"2020-03-21T00:00:00.000Z\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"After days of frustrated floundering with starters, plugins, and Gatsby\\u2019s\\ngenerally lacking in straight-forward-ness, I\\u2019ve decided to start my own\\nlittle bootstrapping guide. The purpose of this guide is to demystify how the\\nfuck Gatsby works and to better come to grips with how plugins, transformers,\\nand the various other chicanery, work.\"), mdx(\"h1\", null, \"For Starters\"), mdx(\"p\", null, \"We all have to start somewhere, and that\\u2019s where Gatsby\\u2019s starters come in.\\nWhat\\u2019s a starter? Well, in Gatsby, you have two options: build the project\\nfrom scratch using npm and your text editor, or make Gatsby write all the\\nboilerplate for you. Starters allow you to specify what kind of boilerplate\\nyou want to start your site with. Gatsby has a default starter, but as near\\nas I can tell, it\\u2019s intended to be a quickstart for people who already know\\nwhat they\\u2019re doing.\"), mdx(\"p\", null, \"As you can imagine, that\\u2019s a problem for people like us who don\\u2019t know what\\nthey\\u2019re doing.\"), mdx(\"p\", null, \"I tried looking around for a barebones Gatsby starter that literally only had\\nGatsby and React installed, but any variation of \\u201Cminimal\\u201D, \\u201Cbarebones\\u201D, and\\n\\u201Cempty\\u201D I put into Google just left me with either reskinned versions of the\\nblog starter or random articles about Gatsby starters. Bleck.\"), mdx(\"p\", null, \"That left me with creating my own. The process to get there looked a little\\nlike this:\"), mdx(\"figure\", null, \"\\n  \", mdx(\"img\", _extends({\n    parentName: \"figure\"\n  }, {\n    \"title\": \"Oh good, my puppy found the chainsaw\",\n    \"alt\": \"Stitch, a blue alien creature, stands on top of a rusty Volkswagon Beetle, laughing maniacly and brandishing a chainsaw.\",\n    \"src\": \"/images/8f9e9ffb6ed10927cd17d12058a7d49d/StitchWithChainsaw.gif\"\n  })), \"\\n  \", mdx(\"figcaption\", {\n    parentName: \"figure\"\n  }, \"\\n    \\\"Oh good, my puppy found the chainsaw\\\"\\n  \")), mdx(\"p\", null, \"Yeah\\u2026 If you don\\u2019t want to go crazy and tear up a bunch of code, I turned the\\ntorn down code into its own Gatsby starter:\\n\", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/joebobmiles/gatsby-starter-empty\"\n  }), \"https://github.com/joebobmiles/gatsby-starter-empty\"), \". To use it, we first need\\nto install Gatsby (if you haven\\u2019t already):\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"$ npm install --global gatsby-cli\\n\")), mdx(\"p\", null, \"As you probably notice, Gatsby informs us that it\\u2019s configured to report to\\nits overlords by default. (I have multiple issues with this, but that\\u2019s a\\nsubject for a different article.)\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"> gatsby-cli@2.10.13 postinstall C:\\\\Users\\\\josep\\\\AppData\\\\Roaming\\\\npm\\\\node_modules\\\\gatsby-cli\\n> node scripts/postinstall.js\\n\\n\\u2554\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2557\\n\\u2551                                                                           \\u2551\\n\\u2551 Gatsby collects anonymous usage analytics                                 \\u2551\\n\\u2551 to help improve Gatsby for all users.                                     \\u2551\\n\\u2551                                                                           \\u2551\\n\\u2551 If you'd like to opt-out, you can use `gatsby telemetry --disable`        \\u2551\\n\\u2551 To learn more, checkout https://gatsby.dev/telemetry                      \\u2551\\n\\u2551                                                                           \\u2551\\n\\u255A\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u255D\\n\")), mdx(\"p\", null, \"I don\\u2019t like my apps reporting to their overlords, so I disabled telemetry.\"), mdx(\"p\", null, \"Now that we have Gatsby installed, we can go about setting up our project. To\\ndo so, use the following command:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"$ gatsby new PersonalSite https://github.com/joebobmiles/gatsby-starter-empty\\n\")), mdx(\"p\", null, \"This will clone the starter repository and rename the cloned directory to\\nPersonalSite. You can name your folder to whatever you want, so feel free to\\nchange the name given to the Gatsby CLI.\"), mdx(\"p\", null, \"Congrats, you just created your first Gatsby project! Yay!\"), mdx(\"h1\", null, \"A Tour of the Carnage\"), mdx(\"p\", null, \"Inside the folder you just cloned, you\\u2019ll find the following directory\\nstructure:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"PersonalSite\\n|- src/\\n|  |- pages/\\n|  |  |- 404.js\\n|  |  |- index.js\\n|- static/\\n|  |- favicon.ico\\n|  |- robots.txt\\n|- .gitignore\\n|- gatsby-config.js\\n|- package.json\\n\")), mdx(\"p\", null, \"You will notice, aside from the gitignore, favicon, and robots file, we are\\nleft with four files of interest: package.json, gatsby-config.js,\\nsrc/pages/index.js, and src/pages/404.js. The package.json is pretty standard\\n(and bare), so we\\u2019ll skip over that.\"), mdx(\"p\", null, \"The next file, gatsby-config.js, is, you guessed it, the Gatsby config file.\\nThis is used to control the build configuration that Gatsby uses to turn your\\nsource code and data into a beautiful static website. There\\u2019s a lot that goes\\ninto here once you get going, but for just starting out, you don\\u2019t need much:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"module.exports = {\\n  siteMetadata: {\\n    title: `My Blog`,\\n    author: {\\n        name: `Full Name`,\\n    },\\n    siteUrl: `https://example.dev`,\\n  },\\n  plugins: [],\\n}\\n\")), mdx(\"p\", null, \"In theory, this could be completely empty, but to save everybody time writing\\nthe basics from scratch, I left the siteMetadata and plugins fields. The\\nplugins field is empty because, well, we\\u2019re not using any to run this basic\\nstarter. I\\u2019ll talk about using plugins at a later time.\"), mdx(\"p\", null, \"Now to the site itself: index.js and 404.js. Both are required by Gatsby, so\\nI had to leave them in there (and inside the pages directory). They\\u2019re fairly\\nsimple:\"), mdx(\"p\", null, \"index.js\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"import React from \\\"react\\\"\\n\\nconst Site = () => (\\n  <h1>Hello World!</h1>\\n)\\n\\nexport default Site\\n\")), mdx(\"p\", null, \"404.js\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"import React from \\\"react\\\"\\n\\nconst NotFoundPage = () => (\\n  <h1>404 - That's an error!</h1>\\n)\\n\\nexport default NotFoundPage\\n\")), mdx(\"p\", null, \"Both files declare React function components, and set them to be default\\nexports. When the Gatsby build runs, it seeks out these files, imports their\\ndefault exports, and uses them to generate an index.html, plus a bundled\\ncommon.js that contains the Site and NotFoundPage components.\\nNow, if we startup the Gatsby development server using:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"$ npm run develop # or `gatsby develop`\\n\")), mdx(\"p\", null, \"And visit \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"http://localhost:8000\"), \" (after waiting for the development server\\nto build the site), we should be greeted with a lovely \\u201CHello World!\\u201D HTML\\npage! Awesome!\"));\n}\n;\nMDXContent.isMDXComponent = true;","excerpt":"After days of frustrated floundering with starters, plugins, and Gatsby’s\ngenerally lacking in straight-forward-ness, I’ve decided to start…"},"site":{"siteMetadata":{"title":"JRM.DEV","author":{"name":"Joseph R Miles"}}}},"pageContext":{"slug":"/barbones-gatsby/"}},"staticQueryHashes":["1985666601"]}