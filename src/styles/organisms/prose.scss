@use "sass:math";
@use "theme";
@use "atoms/typography";
@use "atoms/spacing";
@use "molecules/link";
@use "molecules/voices";

.prose {
  @extend .voice-normal;
  width: 30rem;
  
  p, h1, h2, h3, h4, h5, h6, blockquote, figure, div, pre, aside, ul, ol {
    &:not(:first-child) {
      @extend .mt-md;
    }
  }

  a:any-link {
    @extend .link;

    &[rel*="external"]:after {
      content: "↗";
    }
  }

  // TYPE SCALE
  @for $i from 1 through 6 {
    h#{$i} {
      $font-size: typography.scaled-size(theme.$ratio, (6 - $i));
      font-size: $font-size;
      line-height: math.ceil($font-size / theme.$unit) * theme.$unit;
    }
  }

  // HEADINGS
  h1, h2, h3, h4, h5, h6 {
    @extend .voice-heading;
  }

  /// CODE
  *:not(pre) > code {
    &:before, &:after { content: "`"; }

    padding: 0.05em;
    border-radius: 0.1em;
  }

  pre {
    $padding: theme.semantic-size(sm);
    padding: $padding;
    margin: 0 (-1 * $padding);

    border-radius: 0.1em;

    overflow-x: auto;
  }

  /// BLOCKQUOTES, ASIDES
  blockquote, aside {
    @extend .voice-aside, .text-sm;
    color: theme.semantic-color(light-fg);
  }

  blockquote {
    quotes: '“' '”' "‘" "’";

    :first-child:before {
      content: open-quote;
    }

    :last-child:after {
      content: close-quote;
    }
  }

  /// LISTS
  ul {
    margin-left: 1em;

    &:not(:global(.contains-task-list)) > li:before {
      content: "-";
      position: absolute;

      left: -1em;
    }

    :global(li.task-list-item > input[type="checkbox"]) {
      margin-left: -1.25em;
      margin-right: -0.25em;
    }

    li > ul {
      margin-top: 0 !important;
    }
  }

  ol {
    list-style-type: decimal;
    margin-left: 1.5em;

    li > ol {
      margin-top: 0 !important;
    }
  }

  /// FIGURES
  figure {
    img {
      @extend .w-full;
      text-align: center;
    }

    figcaption {
      @extend .voice-aside, .text-sm;
      color: theme.semantic-color(light-fg);
    }
  }
}