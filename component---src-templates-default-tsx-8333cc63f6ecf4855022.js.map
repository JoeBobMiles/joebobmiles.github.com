{"version":3,"sources":["webpack:///./src/templates/Default.tsx"],"names":["data","mdx","frontmatter","body","excerpt","meta","site","siteMetadata","title","name","content","className","styles","article","classnames","left","style","width","textAlign","text5X","fontSemibold","right","prose"],"mappings":"2FAAA,sIAce,8BACbA,KADa,IAEXC,IACEC,EAHS,EAGTA,YACAC,EAJS,EAITA,KACAC,EALS,EAKTA,QAGcC,EARL,EAOXC,KACEC,aARS,OAab,kBAAC,IAAD,KACE,kBAAC,SAAD,KACE,+BAASL,EAAYM,MAArB,MAAuCH,EAAKG,OAC5C,0BAAMC,KAAK,cAAcC,QAASN,KAGpC,6BAASO,UAAWC,IAAOC,SACzB,4BACEF,UAAWG,IAAWC,QACtBC,MAAO,CACLC,MAAO,QACPC,UAAW,UAGb,wBAAIP,UAAWG,IAAWF,IAAOO,OAAQP,IAAOQ,eAC5ClB,EAAYM,QAIlB,6BAEA,0BAAMG,UAAWG,IAAWO,QAAOT,IAAOU,QACxC,kBAAC,cAAD,KACE,kBAAC,cAAD,KACInB","file":"component---src-templates-default-tsx-8333cc63f6ecf4855022.js","sourcesContent":["import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport { MDXProvider } from \"@mdx-js/react\"\nimport { MDXRenderer } from \"gatsby-plugin-mdx\"\nimport { Helmet } from \"react-helmet\"\nimport classnames from \"classnames\";\n\nimport Layout from \"../components/Layout\"\n\nimport styles from \"./Post.module.scss\";\nimport {right, left} from \"../components/Layout.module.scss\";\n\ntype PostProps = { data?: any }\n\nexport default ({\n  data: {\n    mdx: {\n      frontmatter,\n      body,\n      excerpt\n    },\n    site: {\n      siteMetadata: meta\n    }\n  }\n}: PostProps) =>\n(\n  <Layout>\n    <Helmet>\n      <title>{ frontmatter.title } &mdash; { meta.title }</title>\n      <meta name=\"description\" content={excerpt} />\n    </Helmet>\n\n    <article className={styles.article}>\n      <header\n        className={classnames(left)}\n        style={{\n          width: \"30rem\",\n          textAlign: \"right\"\n        }}\n      >\n        <h1 className={classnames(styles.text5X, styles.fontSemibold)}>\n          { frontmatter.title }\n        </h1>\n      </header>\n\n      <br/>\n\n      <main className={classnames(right, styles.prose)}>\n        <MDXProvider>\n          <MDXRenderer>\n            { body }\n          </MDXRenderer>\n        </MDXProvider>\n      </main>\n    </article>\n  </Layout>\n);\n\nexport const query = graphql`\n  query($slug: String!) {\n    mdx(fields: { slug: { eq: $slug } }) {\n      frontmatter {\n        title\n        date\n      }\n      body\n      excerpt\n    }\n    site {\n      siteMetadata {\n        title\n        author {\n          name\n        }\n      }\n    }\n  }\n`;"],"sourceRoot":""}